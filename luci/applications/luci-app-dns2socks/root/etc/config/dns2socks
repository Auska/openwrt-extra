#The command line call for DNS2SOCKS has the following format:
#
#DNS2SOCKS [/?] [/d] [/q] [l[a]:FilePath] [/u:User /p:Password]
#          [Socks5ServIP[:Port]] [DNSServIPorName[:Port]] [ListenIP[:Port]]
#
#/?            or any invalid parameter outputs the usage text
#/d            disables the cache
#/q            disables the text output to the console
#/l:FilePath   creates a new log file "FilePath"
#/la:FilePath  creates a new log file "FilePath" or appends to the file if
#              it already exists
#/u:User       user name if your SOCKS server uses user/password
#              authentication
#/p:Password   password if your SOCKS server uses user/password
#              authentication
#
#The default values for the addresses and ports are (in case you don't
#specify the command line arguments):
#Default Socks5ServerIP:Port = 127.0.0.1:9050
#Default DNSServerIPorName:Port = 213.73.91.35:53
#Default ListenIP:Port = 127.0.0.1:53
#
#So the SOCKS server runs locally on the TCP port 9050 (Tor's default port;
#attention: for Tor Browser Bundle you must change it to 9150). The used
#DNS server is 213.73.91.35 (dnscache.berlin.ccc.de). The DNS server must
#support TCP on port 53 as Tor doesn't support UDP via SOCKS. DNS2SOCKS
#listens on the UDP port 53 of 127.0.0.1 (only locally) - change this to
#0.0.0.0 for listening on all available local IPv4 addresses.

config dns2socks config
	option enabled '0'
	option local_ip '127.0.0.1'
	option local_port '5533'
	option socks5_ip '127.0.0.1'
	option socks5_port '1081'
	option dns_ip '8.8.8.8'
	option dns_port '53'
	option socks5_user '1081'
	option socks5_pass '1081'
