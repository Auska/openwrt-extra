#!/bin/sh

export YoukuHome="/tmp/youku"

old=$(cat /tmp/youku-main.pid)
echo $$ > /tmp/youku-main.pid
[ "$old" ] && killall -9 $old > /dev/null 2>&1

bootup() {
	[ -d "$YoukuHome" ] && return 0;
	mkdir -p $YoukuHome
	mkdir -p $YoukuHome/ipk
	mkdir -p $YoukuHome/bin
	mkdir -p $YoukuHome/data
	return 0
	# for plugin needed
	/etc/init.d/cron enable
	/etc/init.d/cron start
}

optimize() {
	local data="\
linux-vm-max-cpu-busy-linger=10&\
linux-vm-max-net-upload-k-speed=2000&\
linux-vm-max-net-download-k-speed=2000&\
upload-limit-model=0&\
pcdn-work-mode=0&\
upload-max-uploading-count=2000&\
upload-max-waiting-count=80&\
pcdn-radic-max-download-size-per-hour=8294967296&\
pcdn-radic-max-remove-size-per-hour=8294967296&\
peak-period=07:00-24:00&\
download-disable-in-peak-period=0&\
enable-flash-p2p-hint=1&\
max-cache-buffer-size=24&\
";
	curl --connect-timeout 2 --data "${data}" "http://127.0.0.1:8908/peer/config/xml?m=put"
	return 0
}
local ikuacc="ikuacc"
path=$(uci -q get youku.@paths[0].path)
if [ "$path" = "" ]; then
	killall -9 ikuacc
	uci set youku.config.enable="0"
	uci commit youku
	exit 0
fi
[ -d "$path" ] || return 0;
bootup

[ -e $path/ikuacc ] || mkdir -p $path/ikuacc
[ -d "$path/meta" ] || mkdir -p $path/meta
ln -sfn $path/meta $YoukuHome

if [ "$(uci -q get youku.config.enable)" = "0" ]; then
	[ "$(cat /etc/crontabs/root|grep /etc/youku/youku-guard)" ] && sed -i 's/\*\/5 \* \* \* \* sh \/etc\/youku\/youku-guard > \/dev\/null 2>&1//g' /etc/crontabs/root
	[ "$(cat /etc/firewall.user|grep "tcp --dport 4466")" ] && sed -i 's/iptables \-I INPUT \-p tcp \-\-dport 4466 \-j ACCEPT//g' /etc/firewall.user
	[ "$(cat /etc/firewall.user|grep "udp --dport 4466")" ] && sed -i 's/iptables \-I INPUT \-p udp \-\-dport 4466 \-j ACCEPT//g' /etc/firewall.user
	[ "$(cat /etc/firewall.user|grep "input_wan_rule -p udp")" ] && sed -i 's/iptables \-I input_wan_rule \-p udp \-j ACCEPT//g' /etc/firewall.user
	killall -9 ikuacc
	exit 0
else
	[ "$(cat /etc/crontabs/root|grep /etc/youku/youku-guard)" ] || echo "*/5 * * * * sh /etc/youku/youku-guard > /dev/null 2>&1" >> /etc/crontabs/root	#每5分钟检测程序是否运行
	[ "$(cat /etc/firewall.user|grep "tcp --dport 4466")" ] || echo "iptables -I INPUT -p tcp --dport 4466 -j ACCEPT" >> /etc/firewall.user
	[ "$(cat /etc/firewall.user|grep "udp --dport 4466")" ] || echo "iptables -I INPUT -p udp --dport 4466 -j ACCEPT" >> /etc/firewall.user
	[ "$(cat /etc/firewall.user|grep "input_wan_rule -p udp")" ] || echo "iptables -I input_wan_rule -p udp -j ACCEPT" >> /etc/firewall.user
fi

version=$(uci -q get youku.config.version)
url=$(grep "\<$version\>" /etc/youku/FILES|awk '{print $3}')
tmd5=$(grep "\<$version\>" /etc/youku/FILES|awk '{print $2}')
if [ ! -z "$version" ]; then
	if [ ! -e $path/ikuacc/ikuacc.${version} ]; then
		while [ "$md5" != "$tmd5" ]; do #比对MD5.
			wget -qO /tmp/youku/ipk/youku.ipk -T 120 -t 10 --no-check-certificate ${url}
			tar zxf /tmp/youku/ipk/youku.ipk -C /tmp/youku/ipk
			tar zxf /tmp/youku/ipk/data.tar.gz -C /tmp/youku/ipk
			cp $(find /tmp/youku/ipk/ -name "ikuacc") $path/ikuacc/ikuacc.${version}
			md5=$(md5sum $path/ikuacc/ikuacc.${version}|awk '{print $1}')
			sleep 1
			rm -rf /tmp/youku/ipk/*
	 	done
		chmod 755 $path/ikuacc/ikuacc.${version}
	fi
	cp -f $path/ikuacc/ikuacc.${version} $YoukuHome/bin/ikuacc
	ikuacc="$YoukuHome/bin/ikuacc"
fi
sleep 1
wksn="$(uci -q get youku.config.sn)"
str="--device-serial-number="0000$wksn" --mobile-meta-path="$YoukuHome/meta" --mobile-data-path="
i=0
while [ "$(uci -q get youku.@paths[$i].path)" != "" ]; do
	partsize=`df -m | grep $(uci -q get youku.@paths[$i].path)|awk '{print $2 }'`
	[ ${partsize} -gt 500 ] && {
		if [ $(uci -q get youku.@paths[$i].cache) != "" ]; then
			cache=":$(uci -q get youku.@paths[$i].cache)"
		else
			cache=""
		fi
		[ -d "$path/youku" ] || mkdir -p $path/youku
		path=$(uci -q get youku.@paths[$i].path)
		if [ -d $path/youku/data ]; then	#兼容官方缓存
			ln -sfn $path/youku/data $YoukuHome/data/data$i
		else
			ln -sfn $path $YoukuHome/data/data$i
		fi
		str="$str$YoukuHome/data/data$i$cache;"
		i=$(($i+1))
	}
done
sdt="0"
while true; do
	sleep 1
	if [ "$(uci -q get youku.config.restart)" = "$(date +%H%M)" ]; then
		sleep 30
		if [ "$(uci -q get youku.config.ikrestart)" = "1" ]; then
			killall -9 ikuacc
			echo `date '+%Y/%m/%d %T'` > /etc/youku/restart.log
			sleep 3
		else
			reboot
		fi
	fi
	sleep 5

	if [ "$(uci -q get youku.config.enable)" = "1" ]; then
		if [ "$(pidof ikuacc)" = "" ]; then
			sleep 5
			$ikuacc ${str%?} &
			sleep 20
			#optimize
			sdt="1"
		fi
	else
		killall -9 ikuacc
		exit 0
	fi

	if [ "$sdt" = "1" ]; then
		wget -O - 'http://127.0.0.1:8908/peer/limit/network/set?upload_model='"$(uci -q get youku.config.mode)" > /dev/null 2>&1
		sleep 2
		sdt="0"
	fi
	sleep 30
done
